{"version":3,"sources":["components/PokeList.js","components/Pokemon.js","components/SearchInput.js","components/App.js","index.js"],"names":["PokeList","props","className","children","Pokemon","descriptions","info","favorites","includes","id","onClick","handleFavorites","src","image","alt","name","map","description","index","key","SearchInput","htmlFor","type","onChange","ev","handleSearchPokemon","value","target","App","state","data","userSearch","bind","this","setState","toLowerCase","selectedPokemonId","prevState","pokemonIndex","findIndex","pokemonId","push","splice","console","log","filter","pokemon","item","url","types","React","Component","ReactDOM","render","document","getElementById"],"mappings":"04DAYeA,MARf,SAAkBC,GAChB,OAAO,wBAAIC,UAAU,QAAQD,EAAME,W,MCoCtBC,MArCf,SAAiBH,GACf,IAYMI,EAAeJ,EAAMK,KAC3B,OACE,wBAAIJ,UATAD,EAAMM,UAAUC,SAASP,EAAMQ,IAC1B,gBAEA,OAM8BC,QAdjB,WACtBT,EAAMU,gBAAgBV,EAAMQ,MAc1B,yBAAKP,UAAU,cAAcU,IAAKX,EAAMY,MAAOC,IAAG,iBAAYb,EAAMc,QACpE,wBAAIb,UAAU,eAAeD,EAAMc,MACnC,wBAAIb,UAAU,qBACXG,EAAaW,KAAI,SAACC,EAAaC,GAC9B,OACE,wBAAIhB,UAAU,oBAAoBiB,IAAKD,GACpCD,S,MCTAG,MAff,SAAqBnB,GAKnB,OACE,0BAAMC,UAAU,QACd,2BAAOA,UAAU,gBAAgBmB,QAAQ,eAAzC,wBAGA,2BAAOnB,UAAU,gBAAgBoB,KAAK,OAAOP,KAAK,cAAcN,GAAG,cAAcc,SATzD,SAAAC,GAC1BvB,EAAMwB,oBAAoB,CAAEC,MAAOF,EAAGG,OAAOD,aC+DlCE,E,YA3Db,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,KAAMA,EACNvB,UAAW,GACXwB,WAAY,IAEd,EAAKpB,gBAAkB,EAAKA,gBAAgBqB,KAArB,gBACvB,EAAKP,oBAAsB,EAAKA,oBAAoBO,KAAzB,gBARf,E,iFAWMD,GAClBE,KAAKC,SAAS,CACZH,WAAYA,EAAWL,MAAMS,kB,sCAIjBC,GACdH,KAAKC,UAAS,SAAAG,GACZ,IAAMC,EAAeD,EAAU9B,UAAUgC,WAAU,SAAAC,GAAS,OAAIA,IAAcJ,KAM9E,OALIE,EAAe,EACjBD,EAAU9B,UAAUkC,KAAKL,GAEzBC,EAAU9B,UAAUmC,OAAOJ,EAAc,GAEpC,CACL/B,UAAW8B,EAAU9B,gB,+BAKjB,IAAD,OAEP,OADAoC,QAAQC,IAAIX,KAAKJ,MAAME,YAErB,yBAAK7B,UAAU,OACb,wBAAIA,UAAU,cAAd,cACA,kBAAC,EAAD,CAAauB,oBAAqBQ,KAAKR,sBACvC,kBAAC,EAAD,KACGQ,KAAKJ,MAAMC,KACTe,QAAO,SAAAC,GAAO,OAAIA,EAAQ/B,KAAKoB,cAAc3B,SAAS,EAAKqB,MAAME,eACjEf,KAAI,SAAA+B,GACH,OACE,kBAAC,EAAD,CACE5B,IAAK4B,EAAKtC,GACVA,GAAIsC,EAAKtC,GACTM,KAAMgC,EAAKhC,KACXF,MAAOkC,EAAKC,IACZ1C,KAAMyC,EAAKE,MACX1C,UAAW,EAAKsB,MAAMtB,UACtBI,gBAAiB,EAAKA,2B,GAlDtBuC,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.33f8f7d7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheet/PokeList.css\";\n\nfunction PokeList(props) {\n  return <ul className=\"list\">{props.children}</ul>;\n}\n\nPokeList.propTypes = {\n  children: PropTypes.array.isRequired\n};\n\nexport default PokeList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheet/Pokemon.css\";\n\nfunction Pokemon(props) {\n  const handleFavorites = () => {\n    props.handleFavorites(props.id);\n  };\n\n  const addStylesToFavorites = () => {\n    if (props.favorites.includes(props.id)) {\n      return \"item selected\";\n    } else {\n      return \"item\";\n    }\n  };\n\n  const descriptions = props.info;\n  return (\n    <li className={addStylesToFavorites()} onClick={handleFavorites}>\n      <img className=\"item__image\" src={props.image} alt={`imagen ${props.name}`} />\n      <h3 className=\"item__title\">{props.name}</h3>\n      <ul className=\"descritpion__list\">\n        {descriptions.map((description, index) => {\n          return (\n            <li className=\"descritpion__item\" key={index}>\n              {description}\n            </li>\n          );\n        })}\n      </ul>\n    </li>\n  );\n}\n\nPokemon.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  info: PropTypes.array.isRequired\n};\n\nexport default Pokemon;\n","import React from \"react\";\nimport \"../stylesheet/Search.css\";\nfunction SearchInput(props) {\n  const handleSearchPokemon = ev => {\n    props.handleSearchPokemon({ value: ev.target.value });\n  };\n\n  return (\n    <form className=\"form\">\n      <label className=\"search__label\" htmlFor=\"pokemonName\">\n        Buscador de Pokemon:\n      </label>\n      <input className=\"search__input\" type=\"text\" name=\"pokemonName\" id=\"pokemonName\" onChange={handleSearchPokemon} />\n    </form>\n  );\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport \"../stylesheet/App.css\";\nimport data from \"../api/api.json\";\nimport PokeList from \"./PokeList\";\nimport Pokemon from \"./Pokemon\";\nimport SearchInput from \"./SearchInput\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: data,\n      favorites: [],\n      userSearch: \"\"\n    };\n    this.handleFavorites = this.handleFavorites.bind(this);\n    this.handleSearchPokemon = this.handleSearchPokemon.bind(this);\n  }\n\n  handleSearchPokemon(userSearch) {\n    this.setState({\n      userSearch: userSearch.value.toLowerCase()\n    });\n  }\n\n  handleFavorites(selectedPokemonId) {\n    this.setState(prevState => {\n      const pokemonIndex = prevState.favorites.findIndex(pokemonId => pokemonId === selectedPokemonId);\n      if (pokemonIndex < 0) {\n        prevState.favorites.push(selectedPokemonId);\n      } else {\n        prevState.favorites.splice(pokemonIndex, 1);\n      }\n      return {\n        favorites: prevState.favorites\n      };\n    });\n  }\n\n  render() {\n    console.log(this.state.userSearch);\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Pok√©dex</h1>\n        <SearchInput handleSearchPokemon={this.handleSearchPokemon} />\n        <PokeList>\n          {this.state.data\n            .filter(pokemon => pokemon.name.toLowerCase().includes(this.state.userSearch))\n            .map(item => {\n              return (\n                <Pokemon\n                  key={item.id}\n                  id={item.id}\n                  name={item.name}\n                  image={item.url}\n                  info={item.types}\n                  favorites={this.state.favorites}\n                  handleFavorites={this.handleFavorites}\n                />\n              );\n            })}\n        </PokeList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}